unit uMetadataModel;

interface

uses
  System.JSON, FireDAC.Comp.Client;

type
  TMetadataModel = class
  public
    class function GetColumns(const TableName: string): TJSONArray;
    class function GetConstraints(const TableName: string): TJSONArray;
    class function GetIndexes(const TableName: string): TJSONArray;
  end;

implementation

uses
  uDatabaseConnection;

{ TMetadataModel }

class function TMetadataModel.GetColumns(const TableName: string): TJSONArray;
var
  FDQuery: TFDQuery;
  ColumnsArray: TJSONArray;
  ColumnObject: TJSONObject;
begin
  ColumnsArray := TJSONArray.Create;
  FDQuery := TFDQuery.Create(nil);
  try
    FDQuery.Connection := TDatabaseConnection.GetConnection;
    FDQuery.SQL.Text := '...'; // Sua query aqui
    FDQuery.ParamByName('TableName').AsString := UpperCase(TableName);
    FDQuery.Open;

    while not FDQuery.Eof do
    begin
      ColumnObject := TJSONObject.Create;
      ColumnObject.AddPair('name', Trim(FDQuery.FieldByName('name').AsString));
      // Outros pares...
      ColumnsArray.AddElement(ColumnObject);
      FDQuery.Next;
    end;
  finally
    FDQuery.Free;
  end;
  Result := ColumnsArray;
end;

// Implemente os outros métodos de maneira similar...

end.

