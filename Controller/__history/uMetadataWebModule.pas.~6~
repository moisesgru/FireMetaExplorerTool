unit uMetadataWebModule;

interface

uses
  System.SysUtils,
  System.Classes,
  Web.HTTPApp,
  MVCFramework;

type
  TWebModuleMetadata = class(TWebModule)
  private
    FMVCEngine: TMVCEngine; // Instância do MVC Engine
  public
    constructor Create(AOwner: TComponent); override;
    destructor Destroy; override;
  end;

var
  WebModuleClass: TComponentClass = TWebModuleMetadata;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

constructor TWebModuleMetadata.Create(AOwner: TComponent);
begin
  inherited;
  // Inicializando o TMVCEngine
  FMVCEngine := TMVCEngine.Create(Self);

  // Configuração do servidor RESTful
  FMVCEngine
    .AddController('uMetadataController') // Adiciona o controller
    .SetDefaultProduces(TMVCMediaType.APPLICATION_JSON) // Define JSON como o formato padrão
    .SetDefaultConsumes(TMVCMediaType.APPLICATION_JSON); // Define JSON como formato de entrada

  // Middleware opcional (se necessário)
  FMVCEngine.AddMiddleware(TMVCCompressionMiddleware.Create); // Compressão

  // Adicione outras configurações se necessário
end;

destructor TWebModuleMetadata.Destroy;
begin
  FMVCEngine.Free; // Libera o recurso do engine
  inherited;
end;

end.
